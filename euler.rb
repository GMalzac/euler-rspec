class Euler

# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.
  def problem_1(max)
    result = []
    for i in 1...max do
      result << i if ( i%3 == 0 || i%5 == 0)
    end
    result.reduce(:+)
  end

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
  def problem_2(max)
    result = [1]
    i = 2
    while i <= max do
      result << i
       i = result[-1] + result[-2]
    end
    result.select { |num| num.even? }.reduce(:+)
  end
end
